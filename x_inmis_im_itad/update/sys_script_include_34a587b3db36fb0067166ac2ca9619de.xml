<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_inmis_im_itad.GetUserLocations</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>GetUserLocations</name>
        <script><![CDATA[var GetUserLocations = Class.create();
GetUserLocations.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getLocationDetails: function() {
        var x = [];

        if (gs.getUser().getRoles().indexOf('admin') >= 0 || gs.getUser().getRoles().indexOf('x_inmis_im_itad.imitad_admin') >= 0) {
            var grLocation = new GlideRecord('cmn_location');
            grLocation.query();
            while (grLocation.next()) {
                x.push(grLocation.sys_id.toString());
            }
        } else {
            var gr = new GlideRecord('x_inmis_im_itad_m2m_locations_users');
            gr.addQuery('user', gs.getUser().getID());
            gr.query();
            while (gr.next()) {
                x.push(gr.getValue('location'));
            }
        }
        gs.info("x" + x);
        return x;
    },
    getLocations: function() {
        var x = [];
        var gr = new GlideRecord('x_inmis_im_itad_m2m_locations_users');
        gr.addQuery('user', gs.getUser().getID());
        gr.query();
        while (gr.next()) {
            x.push(gr.getValue('location'));
        }
        return x.toString();
    },

    getIMITADLocationDetails: function() {
        var x = '';

        if (gs.getUser().getRoles().indexOf('admin') >= 0 || gs.getUser().getRoles().indexOf('x_inmis_im_itad.imitad_admin') >= 0) {
            var grLocation = new GlideRecord('x_inmis_im_itad_imitad_location');
            grLocation.query();
            while (grLocation.next()) {
                x +=  grLocation.sys_id.toString() + ',';
            }
			
			x = 'sys_idIN' + x;
        } else {
            var gr = new GlideRecord('x_inmis_im_itad_m2m_locations_users');
            gr.addQuery('user', gs.getUser().getID());
            gr.query();
            while (gr.next()) {

                x += gr.getValue('location') + ',';
            }
			x = 'locationIN' + x;
        }
        gs.info("x" + x);
        return x;
    },
    type: 'GetUserLocations'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-07-29 13:41:06</sys_created_on>
        <sys_id>34a587b3db36fb0067166ac2ca9619de</sys_id>
        <sys_mod_count>180</sys_mod_count>
        <sys_name>GetUserLocations</sys_name>
        <sys_package display_value="Ingram Micro IT Asset Disposition" source="x_inmis_im_itad">df95bbf0dbc17f008a521fe968961950</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Ingram Micro IT Asset Disposition">df95bbf0dbc17f008a521fe968961950</sys_scope>
        <sys_update_name>sys_script_include_34a587b3db36fb0067166ac2ca9619de</sys_update_name>
        <sys_updated_by>Munimohan.Bathala@ness.com</sys_updated_by>
        <sys_updated_on>2020-05-28 07:26:18</sys_updated_on>
    </sys_script_include>
</record_update>
